# note: this is a fully documented effort of restoring the chapter six backup with all node modules installed. 




sudo apt-get update
sudo apt-get install -y ca-certificates curl gnupg
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
NODE_MAJOR=20
echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | sudo tee /etc/apt/sources.list.d/nodesource.list
sudo apt-get update
sudo apt-get install nodejs -y
node -v
sudo apt install  build-essential
sudo npm install -g pnpm
git clone https://github.com/palomasoftware/CIS419_ChapterSix.git
cd CIS419_ChapterSix/

rm package.json
npm init
ubuntu@ip-172-31-39-188:~/CIS419_ChapterSix$ npm install --save react react-dom
npm install --save-dev @babel/core babel-loader @babel/preset-env @babel/preset-react clean-webpack-plugin css-loader file-loader  html-webpack-plugin style-loader url-loader webpack webpack-cli webpack-dev-server
npm install --save react-helmet
npm install --save-dev mini-css-extract-plugin

# chapter 2 setup code.....

npm install --save express
npm install --save nodemon
npm install --save compression cors helmet

# i had to back out to the last documented package.json file due to conflicts with node20. 
npm install --save apollo-server-express@3.10.0
npm install --save   graphql@16.5.0
ubuntu@ip-172-31-39-188:~/CIS419_ChapterSix$ npm install --save  @graphql-tools/schema
npm install --save winston

 - week three  installs

sudo apt-get update && sudo apt-get update -y
sudo apt-get install apache2 mysql-server php-pear php php-mysql
sudo mysql

skip mysql_secure_installation

			
mysql> CREATE USER 'root'@'%' IDENTIFIED BY 'Password123#@!';
Query OK, 0 rows affected (0.02 sec)

mysql> GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' with GRANT OPTION;
Query OK, 0 rows affected (0.00 sec)

mysql> FLUSH PRIVILEGES;
Query OK, 0 rows affected (0.00 sec)

mysql> alter user 'root'@'localhost' IDENTIFIED WITH mysql_native_password by 'Password123#@!';
Query OK, 0 rows affected (0.01 sec)


cd /etc/apache2
sudo apache2.conf
# add one line at the bottom of the file:

Include /etc/phpmyadmin/apache.conf


sudo apt-get install phpmyadmin
cd /etc/apache2
ls
sudo vi apache2.conf
sudo service apache2 restart
history

ubuntu@ip-172-31-39-188:~$ ls
CIS419_ChapterSix
ubuntu@ip-172-31-39-188:~$ sudo mysql
ERROR 1045 (28000): Access denied for user 'root'@'localhost' (using password: NO)
ubuntu@ip-172-31-39-188:~$ sudo mysql -u root -p
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 20
Server version: 8.0.35-0ubuntu0.22.04.1 (Ubuntu)

Copyright (c) 2000, 2023, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql>

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> CREATE DATABASE graphbook_dev CHARACTER SET utf8 COLLATE utf8_general_ci;
Query OK, 1 row affected, 2 warnings (0.01 sec)

mysql>

# verify with phpmyadmin
http://ec2-52-10-244-154.us-west-2.compute.amazonaws.com/phpmyadmin

login : root
pw    : Password123#@!

ubuntu@ip-172-31-39-188:~$ npm install --save sequelize mysql2
 npm install --save-dev babel-plugin-require-context-hook

sudo npm install -g sequelize-cli
npm install --save-dev babel-plugin-require-context-hook



# check .env to make sure you have appropriate NODE_ENV to development (e.g. below)

NODE_ENV=development
NODE_ENV=development
HOST=ec2-34-220-134-163.us-west-2.compute.amazonaws.com
REACT_APP_API_HOST=ec2-34-220-134-163.us-west-2.compute.amazonaws.com
DANGEROUSLY_DISABLE_HOST_CHECK=true
REACT_APP_VAR=
REACT_APP_SECRET=
JWT_SECRET_KEY=Asdadfafasdfasdfsadfsadfsadfasdfasdfasddddddddddddddddddddddddddddsadffffffffffvadfadfasdfasssssssss1231231231231231321231231231


# validate the package.json file 
### since I reinitialized the package.json  - i need to make sure that the following definitions are present......
vi package.json 
 "scripts": {
    "client": "webpack serve --devtool inline-source-map --hot --config webpack.client.config.js",
    "server": "nodemon --exec babel-node --plugins require-context-hook --watch src/server src/server/index.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },



# chapter 4
ubuntu@ip-172-31-39-188:~$ npm install --save @apollo/client graphql

ubuntu@ip-172-31-39-188:~$ npm install react-infinite-scroll-component --save


# validate this with the book.......
  289  npm install apollo-client
  290  npm install apollo-cache-inmemory
  291  npm install apollo-link-http
  292  npm install apollo-link-error
  293  npm install apollo-link

  296  npm install react-apollo
  297  npm install react-infinite-scroller
  298  npm install react-apollo


npm i --save @fortawesome/fontawesome-svg-core @fortawesome/free-solid-svg-icons @fortawesome/free-brands-svg-icons @fortawesome/react-fontawesome


ubuntu@ip-172-31-39-188:~$ npm install --save jsonwebtoken bcrypt


###### now i am restored up to chapter 6+ 
###### step in slowly with the testing.


  115  cd CIS419_ChapterSix/
  116  ls
  117  vi .env
  118  source .env
  119  ls
  120  vi webpack.client.config.js
  121  cd src/client/apollo
  122  ls
  123  vi index.js
  124  cd ..
  125  ls
  126  vi webpack.client.config.js
  127  vi package.json
  128  history



# testing (retesting chapter one) 
 npm run client
  157  vi package.json
  158  npm run test
  159  vi package.json
  160  npm run test
  161  ls
  162  vi package-lock.json
  163  vi package.json
  164  npm run test
  165  cat error.log
  166  ls
  167  cat .evn
  168  cat .env
  169  vi .env
  170  souce .env
  171  source .env
  172  npm run test
  173  npm run
  174  ls
  175  vi package.json
  176  npm run test
  177  npm run client
  178  history

# with the commands I put in two 'script' sections in package.json  - which created a lot of confusion
# when i cleaned this up it worked approopriately.



I had to change two separate files ( App.js / index.js ) in order to 'retest' the chapter one content. 


# 11/30/2023 ok restart node and edit (vi) webpack.client.config in oder to update my dns.


ubuntu@ip-172-31-39-188:~/CIS419_ChapterSix/src/client$  npm run client

# works # skip the 'temp' part of the hardcoded newsfeed and move to chapter 2

* I also checked the .env file


ubuntu@ip-172-31-39-188:~/CIS419_ChapterSix$ cat .env
NODE_ENV=development
NODE_ENV=development
HOST=ec2-54-70-44-189.us-west-2.compute.amazonaws.com
REACT_APP_API_HOST=ec2-54-70-44-189.us-west-2.compute.amazonaws.com
DANGEROUSLY_DISABLE_HOST_CHECK=true
REACT_APP_VAR=
REACT_APP_SECRET=
JWT_SECRET_KEY=Asdadfafasdfasdfsadfsadfsadfasdfasdfasddddddddddddddddddddddddddddsadffffffffffvadfadfasdfasssssssss1231231231231231321231231231
ubuntu@ip-172-31-39-188:~/CIS419_ChapterSix$ source .env
ubuntu@ip-172-31-39-188:~/CIS419_ChapterSix$



ubuntu@ip-172-31-39-188:~/CIS419_ChapterSix$ sequelize db:migrate --migrations-path  src/server/migrations --config src/server/config/index.js

Sequelize CLI [Node: 20.9.0, CLI: 6.6.2, ORM: 6.35.1]

Loaded configuration file "src/server/config/index.js".
Using environment "development".
== 20220810110632-create-post: migrating =======
== 20220810110632-create-post: migrated (0.057s)

== 20220810122408-create-user: migrating =======
== 20220810122408-create-user: migrated (0.049s)

== 20220810122445-add-userId-to-post: migrating =======
== 20220810122445-add-userId-to-post: migrated (0.124s)

== 20220814234032-add-email-password-to-post: migrating =======
== 20220814234032-add-email-password-to-post: migrated (0.114s)





# validate the DNS in index.js  (found in <project>/src/client/apollo/index.js)


    onError(({ graphQLErrors, networkError }) => {
      if (graphQLErrors) {
        graphQLErrors.map(({ message, locations, path, extensions }) => {
          if(extensions.code === 'UNAUTHENTICATED') {
            localStorage.removeItem('jwt');
            client.clearStore()
          }
          console.log(`[GraphQL error]: Message: ${message}, Location:
          ${locations}, Path: ${path}`);
        });
        if (networkError) {
          console.log(`[Network error]: ${networkError}`);
        }
      }
    }),
    AuthLink,
    new HttpLink({
      uri: 'http://ec2-54-70-44-189.us-west-2.compute.amazonaws.com:8000/graphql',
      credentials: 'same-origin',
    }),
 ]),
 cache: new InMemoryCache(),
});




























https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-20-04



